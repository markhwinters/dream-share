// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum VideoStatus {
  PENDING
  APPROVED
  REJECTED
}

enum SocialPlatform {
  YOUTUBE
  TWITTER
  INSTAGRAM
  FACEBOOK
  TIKTOK
}

model User {
  id String @id @default(cuid())
  email     String    @unique
  clerkId   String    @unique
  name      String?
  image     String?
  role      Role      @default(USER)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  videos    Video[]
}

enum Role {
  ADMIN
  USER
}

model Video {
  id          String      @id @default(cuid())
  title       String
  description String?
  fileUrl     String
  thumbnailUrl String?
  status      VideoStatus @default(PENDING)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  userId      String
  user        User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  shares      SocialShare[]

  @@index([userId])
}

model SocialShare {
  id            String         @id @default(cuid())
  videoId       String
  video         Video          @relation(fields: [videoId], references: [id], onDelete: Cascade)
  platform      SocialPlatform
  shareUrl      String?
  platformPostId String?
  createdAt     DateTime       @default(now())

  @@index([videoId])
}